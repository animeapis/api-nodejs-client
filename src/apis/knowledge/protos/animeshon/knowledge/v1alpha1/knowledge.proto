syntax = "proto3";

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package animeshon.knowledge.v1alpha1;

option go_package = "github.com/animeapis/go-genproto/knowledge/v1alpha1;knowledge";
option java_package = "com.animeshon.knowledge.v1alpha1";
option java_multiple_files = true;
option ruby_package = "Animeshon::Knowledge::v1Alpha1";

service Knowledge {
  option (google.api.default_host) = "knowledge.animeapis.com";

  rpc GetContribution(GetContributionRequest) returns (Contribution) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=users/*/contributions/*}"
    };
  }

  rpc ListContributions(ListContributionsRequest) returns (ListContributionsResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/{parent=users/*}/contributions"
    };
  }

  rpc CreateContribution(CreateContributionRequest) returns (Contribution) {
    option (google.api.http) = {
      post: "/v1alpha1/{parent=users/*}/contributions"
      body: "*"
    };
  }

  rpc GetContributionChanges(GetContributionChangesRequest) returns (ContributionChanges) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=users/*/contributions/*}:changes"
    };
  }

  rpc ReviewContribution(ReviewContributionRequest) returns (Contribution) {
    option (google.api.http) = {
      post: "/v1alpha1/{name=users/*/contributions/*}:review"
      body: "*"
    };
  }

  rpc ApproveContribution(ApproveContributionRequest) returns (Contribution) {
    option (google.api.http) = {
      post: "/v1alpha1/{name=users/*/contributions/*}:approve"
      body: "*"
    };
  }

  rpc RejectContribution(RejectContributionRequest) returns (Contribution) {
    option (google.api.http) = {
      post: "/v1alpha1/{name=users/*/contributions/*}:reject"
      body: "*"
    };
  }

  rpc AllocateResourceName(AllocateResourceNameRequest) returns (AllocateResourceNameResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/contributions:allocateResourceName"
    };
  }
}

message AllocateResourceNameRequest {
  // The resource kind of the resource to migrate.
  string kind = 1 [(google.api.field_behavior) = REQUIRED];
}

message AllocateResourceNameResponse {
  // The resource name of the resource to migrate.
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}


message ContributionChanges {
  repeated EntryEntity additions = 2;

  repeated EntryEntity deletions = 3;
}

message Contribution {
  enum State {
    PENDING = 0;
    APPROVED = 1;
    REJECTED = 2;
    DRAFT = 3;
  }
  // The resource name of the contribution.
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  string reviewer = 3 [(google.api.field_behavior) = OUTPUT_ONLY];

  State state = 4 [(google.api.field_behavior) = OUTPUT_ONLY];

  string display_name = 5;

  // Incremental value which specifies how many times the contribution has been reviewed.
  int32 generation = 6 [(google.api.field_behavior) = OUTPUT_ONLY];

  // When the album was created.
  google.protobuf.Timestamp create_time = 7 [(google.api.field_behavior) = OUTPUT_ONLY];

  // When the album was updated.
  google.protobuf.Timestamp update_time = 8 [(google.api.field_behavior) = OUTPUT_ONLY];

 // When the album was reviewed.
  google.protobuf.Timestamp review_time = 9 [(google.api.field_behavior) = OUTPUT_ONLY];
}

message ReviewContributionRequest {
  string name = 1;

  string comment = 2;

  ContributionChanges changes = 3;
}

message CreateContributionRequest {
  // The parent resource where this contribution will be created.
  string parent = 1 [(google.api.field_behavior) = REQUIRED];

  Contribution contribution = 2;

  ContributionChanges changes = 3;
}

message ListContributionsRequest {
  // The parent, which owns this collection of contributions.
  string parent = 1 [(google.api.field_behavior) = REQUIRED];

  /*
  The maximum number of users to return. Server may return fewer users
  than requested. If unspecified, server will pick an appropriate default.
  */
  int32 page_size = 2;

  // The value returned from the previous call.
  string page_token = 3;

  // A filter to be applied to results.
  string filter = 4;
}

message ListContributionsResponse {
  // The list of contributions.
  repeated Contribution contributions = 1;

  // A token to retrieve next page of results.
  string next_page_token = 2;
}

message GetContributionChangesRequest {
  // The resource name of the requested contribution.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetContributionRequest {
  // The resource name of the requested contribution.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message ApproveContributionRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message RejectContributionRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message EntryEntity {
  oneof entity {
    Anime anime = 1;
    Canonical canonical = 2;
    Chapter chapter = 3;
    Character character = 4;
    Episode episode = 5;
    GameRelease game_release = 6;
    GraphicNovel graphic_novel = 7;
    LightNovel light_novel = 8;
    Organization organization = 9;
    Person person = 10;
    Track track = 11;
    Universe universe = 12;
    Volume volume = 13;
  }
}

message Anime {
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  /*
  Valid anime types:
  Unknown type
  UNKNOWN

  Tv series
  TV

  Movie
  MOVIE

  Original video animation
  OVA

  Original Net Anime
  ONA

  Special
  SPECIAL

  Web anime
  WEB

  Music video
  MUSIC_VIDEO

  Other
  OTHER
  */
  string type = 2;
  repeated Edge episodes = 3;
  int32 EpisodeCount = 4;
  repeated Text names = 5;
  repeated Text aliases = 6;
  repeated Text descriptions = 7;
  string cover_image_id = 8;
  string banner_image_id = 9;
  repeated Website websites = 10;
  repeated Marketplace marketplaces = 11;

  /*
  Valid content statuses:
  Unknown status
  UNKNOWN

  Publishing or airing is still ongoing.
  ONGOING

  Publishing or airing has been completed.
  COMPLETED

  Publishing or airing has been scheduled.
  SCHEDULED

  Publishing or airing started but never finished.
  INTERRUPTED

  Publishing or airing was scheduled but later canceled.
  CANCELED

  Publishing or airing has been suspended / has been put on hold.
  SUSPENDED

  The content is in work in progress
  WORK_IN_PROGRESS
  */
  string status = 12;
  repeated ContentRelation content_relations = 13;

  /*
  Valid Publishing types:
  Unknown status
	UNKNOWN

	Self publishing
	SELF

	Publisched by a corporation
	CORPORATE
  */
  string publishing_type = 14;
  
  /*
  Valid values:
  TRUE
  FALSE
  UNKNOWN
  */
  string original = 15;
  repeated Running runnings = 16;
  google.protobuf.Timestamp release_date = 17;
  repeated Cast starring = 18;
  repeated Collaboration staff = 19;
  repeated Edge genres = 20;
  repeated Edge releases = 21;
  repeated Soundtrack soundtracks = 22;
  repeated VoiceActing voiceactings = 23;

  /*
  Valid maturity Ratings:

  Over 18 in USA
  MTR_RTN_USA_NC17

  Over 18 in USA
  MTR_RTN_USA_R

  Over 13 in USA
  MTR_RTN_USA_PG13

  Over 3 in USA
  MTR_RTN_USA_PG

  Safe in USA
  MTR_RTN_USA_G
  */
  repeated string maturity_ratings = 24;

  /*
  Valid Region Restrictions:
  No Region Restriction
  NONE

  The Entity is illegal following the U.N. guidelines
  ILLEGAL
  */
  repeated string region_restrictions = 25;
}

message Canonical {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  repeated Text names = 2;
  repeated Text aliases = 3;
  repeated Text descriptions = 4;
  string cover_image_id = 5;
  string banner_image_id = 6;
  repeated Website websites = 7;
  repeated Marketplace marketplaces = 8;
  repeated Edge contents = 9;
}

message Chapter {
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  /*
  Valid Chapter types
  Unknown type
  UNKNOWN

  Regular chapter
  REGULAR

  Extra chapter
  EXTRA
  */
  string type = 2;
  repeated Edge episodes = 3;
  int32 identifier = 4;
  int32 page_count = 5;
  google.protobuf.Timestamp release_date = 6;
  repeated Text names = 7;
  repeated Text aliases = 8;
  repeated Text descriptions = 9;
  string cover_image_id = 10;
  string banner_image_id = 11;
  repeated Website websites = 12;
  repeated Marketplace marketplaces = 13;
  repeated Cast starring = 14;
  repeated Collaboration staff = 15;
  repeated Edge releases = 16;

  /*
  Valid maturity Ratings:

  Over 18 in USA
  MTR_RTN_USA_NC17

  Over 18 in USA
  MTR_RTN_USA_R

  Over 13 in USA
  MTR_RTN_USA_PG13

  Over 3 in USA
  MTR_RTN_USA_PG

  Safe in USA
  MTR_RTN_USA_G
  */
  repeated string maturity_ratings = 17;

  /*
  Valid Region Restrictions:
  No Region Restriction
  NONE

  The Entity is illegal following the U.N. guidelines
  ILLEGAL
  */
  repeated string region_restrictions = 18;
}

message Character {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  string birthday_day = 2;
  string birthday_month = 3;
  string birthday_year = 4;
  repeated Text hometown = 5;
  repeated Text birthplace = 6;

  /*
  Unknown gender
  UNKNOWN

	Male
	MALE

	Female
	FEMALE

	Male which seems a female
	MALE_TRAP

	Female which seems a male
	FEMALE_TRAP

	Both male and female
	HERMAPHRODITIC

	None of the default gender applies
	OTHER

	The gender is undefined
	UNDEFINED
  
	The gender something between male and female
	INTERSEXUAL
  */
  string genre = 7;

  /*
  Valid blood types:
  Unknown blood type
	UNKNOWN

	A (no Rh info)
	A

	B (no Rh info)
	B

	AB (no Rh info)
	AB
  
	O (no Rh info)
	O

	A+
	A_PLUS

	B+
	B_PLUS

	AB+
	AB_PLUS
  
	O+
	O_PLUS

	A-
	A_MINUS

	B-
	B_MINUS

	AB-
	AB_MINUS

	O-
	O_MINUS
  */
  string blood_type = 8;

  /*
  Valid Cup Sizes:
  UNKNOWN
  AAA 
  AA
  A
  B
  C
  D
  E
  F
  G
  H
  I
  J
  K
  L
  M
  N
  O
  P
  Q
  R
  S
  T
  U
  V
  W
  X
  Y
  Z
  */
  string cup_size = 9;

  /*
  Valid Age Range:
  Unknown
  UNKNOWN

  The character is an infant. 1-3
  INFANT

  The character is a child. 4-12
  CHILD

  The character is a teen. 13-17
  TEEN

  The character is a young adult. 18-25
  YOUNG_ADULT

  The character is a grown up adult. 26-59
  ADULT

  The character is an eldery. 60+
  ELDERY

  The character is an entity which the concept of age do not makes sense (robots, ...)
  NOT_APPLICABLE

  The character can't be fit in any any of the other category. (Gods, planets, ...)
  WITHOUT
  */
  string age_range = 10;
  int32 age = 11;
  int32 height = 12;
  int32 weight = 13;
  int32 bust = 14;
  int32 waist = 15;
  int32 hips = 16;
  repeated Text names = 17;
  repeated Text aliases = 18;
  repeated Text descriptions = 19;
  string cover_image_id = 20;
  string banner_image_id = 21;
  repeated Website websites = 22;
  repeated Marketplace marketplaces = 23;
  repeated Edge guise_of = 24;
}

message Episode {
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  /*
  Valid Episode types:
  Unknown episode type
  UNKNOWN

  Regular episode
  REGULAR

  Recapitolation episode
  RECAP

  Parody
  PARODY

  Promo episode
  PROMO

  Special episode
  SPECIAL

  Opening / ending episode
  OPENING_ENDING

  Other
  OTHER
  */
  string type = 2;
  int32 identifier = 3;
  google.protobuf.Timestamp release_date = 4;
  repeated Text names = 5;
  repeated Text aliases = 6;
  repeated Text descriptions = 7;
  string cover_image_id = 8;
  string banner_image_id = 9;
  repeated Website websites = 10;
  repeated Marketplace marketplaces = 11;
  repeated Cast starring = 12;
  repeated Collaboration staff = 13;
  repeated Soundtrack soundtracks = 14;
  repeated VoiceActing voiceactings = 15;

  /*
  Valid maturity Ratings:

  Over 18 in USA
  MTR_RTN_USA_NC17

  Over 18 in USA
  MTR_RTN_USA_R

  Over 13 in USA
  MTR_RTN_USA_PG13

  Over 3 in USA
  MTR_RTN_USA_PG

  Safe in USA
  MTR_RTN_USA_G
  */
  repeated string maturity_ratings = 16;

  /*
  Valid Region Restrictions:
  No Region Restriction
  NONE

  The Entity is illegal following the U.N. guidelines
  ILLEGAL
  */
  repeated string region_restrictions = 17;
}

message GameRelease {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  repeated string languages = 2;
  google.protobuf.Timestamp release_date = 3;
  //repeated Media media = 4;

  /*
  Valid Censorships
	Unknown censorship
	UNKNOWN

	No censorship
	NONE

	Censorship applied
	CENSORED
  */
  string censorship = 5;

  /*
  Valid Publishing types:
  Unknown status
	UNKNOWN
  
	Self publishing
	SELF

	Publisched by a corporation
	CORPORATE
  */
  string publishing_type = 6; 
  string asin = 7;
  string gtin = 8;

  /*
  valid game release types:
  Unknown game release type
  UNKNOWN

  The release is complete
  COMPLETE

  The release is only a part of the content
  PARTIAL

  The release is just trial
  TRIAL

  The release is a dlc
  DLC
  */
  string type = 9;
  int32 WidthResolution = 10;
  int32 HeightResolution = 11;
  
  /*
  Valid values:
  TRUE
  FALSE
  UNKNOWN
  */
  string IsPatch = 12;
  
  /*
  Valid values:
  TRUE
  FALSE
  UNKNOWN
  */
  string IsFree = 13;

  /*
  Valid game dub degree
  Unknown DUB degree
  UNKNOWN

  Not dubbed
  NONE

  Only erotic scenes are dubbed
  ERO_ONLY

  Partially dubbed
  PARTIAL

  Full dubbed
  FULL
  */
  string dub_degree = 14;

  /*
  Valid game animation degrees:
  Unknown animation degree
  UNKNOWN

  No animation
  NONE

  Simple animations
  SIMPLE

  Partial animation -  Some fully animated scenes
  PARTIAL

  Fully animated
  FULL
  */
  string story_animation_degree = 15;
  /*
  Valid game animation degrees:
  Unknown animation degree
  UNKNOWN

  No animation
  NONE

  Simple animations
  SIMPLE

  Partial animation -  Some fully animated scenes
  PARTIAL
  
  Fully animated
  FULL
  */
  string ero_animation_degree = 16;
  string engine = 17;

  /*
  Valid Platforms:
  Unknown platform
  UNKNOWN 

  Windows
  WINDOWS 

  DOS
  DOS 

  LINUX
  LINUX 

  Mac
  MAC 

  IOs devices
  IOS 

  Android
  ANDROID 

  DVD player
  DVD_PLAYER 

  Blu-ray Player
  BLU_RAY_PLAYER 

  FM Towns https://en.wikipedia.org/wiki/FM_Towns
  FM_TOWNS 

  FM-7 Towns https://en.wikipedia.org/wiki/FM-7
  FM7_TOWNS 

  FM-8 Towns https://en.wikipedia.org/wiki/FM-8
  FM8_TOWNS 

  Gameboy advance
  GAMEBOY_ADVANCE 

  Gameboy color
  GAMEBOY_COLOR 

  MSX Computer https://en.wikipedia.org/wiki/MSX
  MSX 

  Nintendo DS
  NINTENDO_DS 

  NES platform
  NES 

  C88 https://en.wikipedia.org/wiki/PC-8800_series
  P88 

  PC98 https://en.wikipedia.org/wiki/PC-9800_series
  P98 

  PC Engine
  PC_ENGINE 

  Pc-FX https://en.wikipedia.org/wiki/PC-FX
  PC_FX 

  Playstation portable
  PSP 

  Playstation 1
  PS1 

  Playstation 2
  PS2 

  Playstation 3
  PS3 

  Playstation 4
  PS4 

  Playstation 5
  PS5 

  Playstation vita
  PS_VITA 

  Dgramcast https://en.wikipedia.org/wiki/Dreamcast
  DGRAMCAST 

  Sega Staurn
  SEGA_SATURN 

  Sega Mega-CD
  SEGA_MEGACD 

  Super Nintendo
  SUPER_NINTENDO 

  Nintendo Switch
  NINTENDO_SWITCH 

  Ninentdo WII
  NINTENDO_WII 

  Nintendo WI
  NINTENDO_WII_U 

  Nintendo 3Ds
  NINTENDO_3DS 

  X68000 https://en.wikipedia.org/wiki/X68000
  X68000 

  Xbox One
  XBOX_ONE 

  Xbox 360
  XBOX_360 

  Xbox
  XBOX 

  Xbox Series X
  XBOX_X 

  Website
  WEBSITE 

  Visual Novel DS https://github.com/BASLQC/vnds/wiki
  VN_DS 

  Sharp X1 https://en.wikipedia.org/wiki/Sharp_X1
  SHARP_X1 

  3DO Interactive Multiplayer
  INTERACTIVE_3DO 

  Other
  OTHER 

  Mobile Other
  MOBILE_OTHER
  */
  repeated string platforms = 18;

  repeated Text names = 19;
  repeated Text aliases = 20;
  repeated Text descriptions = 21;
  string cover_image_id = 22;
  string banner_image_id = 23;
  repeated Website websites = 24;
  repeated Marketplace marketplaces = 25;
  repeated Cast starring = 26;
  repeated Collaboration staff = 27;
  repeated Soundtrack soundtracks = 28;
  repeated VoiceActing voiceactings = 29;

  /*
  Valid maturity Ratings:

  Over 18 in USA
  MTR_RTN_USA_NC17

  Over 18 in USA
  MTR_RTN_USA_R

  Over 13 in USA
  MTR_RTN_USA_PG13

  Over 3 in USA
  MTR_RTN_USA_PG

  Safe in USA
  MTR_RTN_USA_G
  */
  repeated string maturity_ratings = 30;

  /*
  Valid Region Restrictions:
  No Region Restriction
  NONE

  The Entity is illegal following the U.N. guidelines
  ILLEGAL
  */
  repeated string region_restrictions = 31;
}

message GraphicNovel {
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  /*
  Valid Graphic Novel types:
  Unknown graphic novel type
  UNKNOWN

  Japanese GraphicNovel
  MANGA

  One shot (only one volume)
  ONE_SHOT

  Cinese GraphicNovel
  MANHUA

  Korean GraphicNovel
  MANHWA

  Original English Language
  OEL

  Web native comic (webtoon)
  WEB_COMIC

  GraphicNovel consisting of 4 pannels
  YON_KOMA

  Other
  OTHER
  */
  string type = 2;
  repeated Edge chapters = 3;
  int32 ChapterCount = 4;
  repeated Text names = 5;
  repeated Text aliases = 6;
  repeated Text descriptions = 7;
  string cover_image_id = 8;
  string banner_image_id = 9;
  repeated Website websites = 10;
  repeated Marketplace marketplaces = 11;

  /*
  Valid content statuses:
  Unknown status
  UNKNOWN

  Publishing or airing is still ongoing.
  ONGOING

  Publishing or airing has been completed.
  COMPLETED

  Publishing or airing has been scheduled.
  SCHEDULED

  Publishing or airing started but never finished.
  INTERRUPTED

  Publishing or airing was scheduled but later canceled.
  CANCELED

  Publishing or airing has been suspended / has been put on hold.
  SUSPENDED

  The content is in work in progress
  WORK_IN_PROGRESS
  */
  string status = 12;
  repeated ContentRelation content_relations = 13;

  /*
  Valid Publishing types:
  Unknown status
	UNKNOWN
  
	Self publishing
	SELF

	Publisched by a corporation
	CORPORATE
  */
  string publishing_type = 14;
  
  /*
  Valid values:
  TRUE
  FALSE
  UNKNOWN
  */
  string original = 15;
  repeated Running runnings = 16;
  google.protobuf.Timestamp release_date = 17;
  repeated Cast starring = 18;
  repeated Collaboration staff = 19;
  repeated Edge genres = 20;
  repeated Edge releases = 21;

  /*
  Valid maturity Ratings:

  Over 18 in USA
  MTR_RTN_USA_NC17

  Over 18 in USA
  MTR_RTN_USA_R

  Over 13 in USA
  MTR_RTN_USA_PG13

  Over 3 in USA
  MTR_RTN_USA_PG

  Safe in USA
  MTR_RTN_USA_G
  */
  repeated string maturity_ratings = 22;

  /*
  Valid Region Restrictions:
  No Region Restriction
  NONE

  The Entity is illegal following the U.N. guidelines
  ILLEGAL
  */
  repeated string region_restrictions = 23;
  repeated Edge volumes = 24;
}

message LightNovel {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  repeated Edge chapters = 2;
  int32 ChapterCount = 3;
  repeated Text names = 4;
  repeated Text aliases = 5;
  repeated Text descriptions = 6;
  string cover_image_id = 7;
  string banner_image_id = 8;
  repeated Website websites = 9;
  repeated Marketplace marketplaces = 10;

  /*
  Valid content statuses:
  Unknown status
  UNKNOWN

  Publishing or airing is still ongoing.
  ONGOING

  Publishing or airing has been completed.
  COMPLETED

  Publishing or airing has been scheduled.
  SCHEDULED

  Publishing or airing started but never finished.
  INTERRUPTED

  Publishing or airing was scheduled but later canceled.
  CANCELED

  Publishing or airing has been suspended / has been put on hold.
  SUSPENDED

  The content is in work in progress
  WORK_IN_PROGRESS
  */
  string status = 11;
  repeated ContentRelation content_relations = 12;

  /*
  Valid Publishing types:
  Unknown status
	UNKNOWN

	Self publishing
	SELF

	Publisched by a corporation
	CORPORATE
  */
  string publishing_type = 13;
  
  /*
  Valid values:
  TRUE
  FALSE
  UNKNOWN
  */
  string original = 14;
  repeated Running runnings = 15;
  google.protobuf.Timestamp release_date = 16;
  repeated Cast starring = 17;
  repeated Collaboration staff = 18;
  repeated Edge genres = 19;
  repeated Edge releases = 20;

  /*
  Valid maturity Ratings:

  Over 18 in USA
  MTR_RTN_USA_NC17

  Over 18 in USA
  MTR_RTN_USA_R

  Over 13 in USA
  MTR_RTN_USA_PG13

  Over 3 in USA
  MTR_RTN_USA_PG

  Safe in USA
  MTR_RTN_USA_G
  */
  repeated string maturity_ratings = 21;

  /*
  Valid Region Restrictions:
  No Region Restriction
  NONE

  The Entity is illegal following the U.N. guidelines
  ILLEGAL
  */
  repeated string region_restrictions = 22;
  repeated Edge volumes = 23;
}


message Organization {
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  /*
  Valid Organization types:
  Uunknown organization type
  UNKNOWN

  Coorporation / company
  CORPORATE

  Circle of people
  CIRCLE
  */
  string type = 2;
  google.protobuf.Timestamp foundation_date = 3;

  /*
  Valid Content Focuses:
  Unknown focus
	UNKNOWN

	Main content handled are games
	GAME

	Main content handled are anime
	ANIME

	Main content handled are manga
	MANGA

	Main content handled are light novels
	LIGHT_NOVEL

	ContentFocusOther other
	OTHER
  */
  string focus = 4;
  repeated Text names = 5;
  repeated Text aliases = 6;
  repeated Text descriptions = 7;
  string cover_image_id = 8;
  string banner_image_id = 9;
  repeated Website websites = 10;
}

message Person {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  repeated string nationalities = 2;
  repeated string languages = 3;
  google.protobuf.Timestamp birthday = 4;
  /*
  Unknown gender
  UNKNOWN 
  
	Male
	MALE 

	Female
	FEMALE 

	Male which seems a female
	MALE_TRAP 

	Female which seems a male
	FEMALE_TRAP 

	Both male and female
	HERMAPHRODITIC 

	None of the default gender applies
	OTHER 

	The gender is undefined
	UNDEFINED 
  
	The gender something between male and female
	INTERSEXUAL 
  */
  string gender = 5;

  /*
  Valid blood types:
  Unknown blood type
	UNKNOWN

	A (no Rh info)
	A

	B (no Rh info)
	B

	AB (no Rh info)
	AB
  
	O (no Rh info)
	O

	A+
	A_PLUS

	B+
	B_PLUS

	AB+
	AB_PLUS
  
	O+
	O_PLUS

	A-
	A_MINUS

	B-
	B_MINUS

	AB-
	AB_MINUS
  
	O-
	O_MINUS
  */
  string blood_type = 6;
  repeated Text names = 7;
  repeated Text aliases = 8;
  repeated Text descriptions = 9;
  string cover_image_id = 10;
  string banner_image_id = 11;
  repeated Website websites = 12;
}

message Track {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  google.protobuf.Timestamp release_date = 2;
  repeated Text names = 3;
  repeated Text aliases = 4;
  repeated Text descriptions = 5;
  string cover_image_id = 6;
  string banner_image_id = 7;
  repeated Website websites = 8;
  repeated Marketplace marketplaces = 9;
  repeated Collaboration staff = 10;
  repeated Edge genres = 11;
  repeated Edge releases = 12;
}

message Universe {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  repeated Text names = 2;
  repeated Text aliases = 3;
  repeated Text descriptions = 4;
  string cover_image_id = 5;
  string banner_image_id = 6;
  repeated Website websites = 7;
  repeated Marketplace marketplaces = 8;
  repeated Edge contents = 9;
  repeated Edge canonicals = 10;
}

message VisualNovel {
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  /*
  Valid Visual Novel lengths:
  Unknown length
  UNKNOWN
  
  < 2 hours
  VERY_SHORT

  20 - 10 hours
  SHORT

  10 - 30 hours
  MEDIUM

  30 - 50 hours
  LONG

  > 50 hours
  VERY_LONG
  */
  string length = 2;
  repeated Text names = 3;
  repeated Text aliases = 4;
  repeated Text descriptions = 5;
  string cover_image_id = 6;
  string banner_image_id = 7;
  repeated Website websites = 8;
  repeated Marketplace marketplaces = 9;

  /*
  Valid content statuses:
  Unknown status
  UNKNOWN

  Publishing or airing is still ongoing.
  ONGOING

  Publishing or airing has been completed.
  COMPLETED

  Publishing or airing has been scheduled.
  SCHEDULED

  Publishing or airing started but never finished.
  INTERRUPTED

  Publishing or airing was scheduled but later canceled.
  CANCELED

  Publishing or airing has been suspended / has been put on hold.
  SUSPENDED

  The content is in work in progress
  WORK_IN_PROGRESS
  */
  string status = 10;
  repeated ContentRelation content_relations = 11;

  /*
  Valid Publishing types:
  Unknown status
	UNKNOWN
  
	Self publishing
	SELF

	Publisched by a corporation
	CORPORATE
  */
  string publishing_type = 12;
  
  /*
  Valid values:
  TRUE
  FALSE
  UNKNOWN
  */
  string original = 13;
  repeated Running runnings = 14;
  google.protobuf.Timestamp release_date = 15;
  repeated Cast starring = 16;
  repeated Collaboration staff = 17;
  repeated Edge genres = 18;
  repeated Edge releases = 19;
  repeated Soundtrack soundtracks = 20;
  repeated VoiceActing voiceactings = 21;

  /*
  Valid maturity Ratings:

  Over 18 in USA
  MTR_RTN_USA_NC17

  Over 18 in USA
  MTR_RTN_USA_R

  Over 13 in USA
  MTR_RTN_USA_PG13

  Over 3 in USA
  MTR_RTN_USA_PG

  Safe in USA
  MTR_RTN_USA_G
  */
  repeated string maturity_ratings = 22;

  /*
  Valid Region Restrictions:
  No Region Restriction
  NONE

  The Entity is illegal following the U.N. guidelines
  ILLEGAL
  */
  repeated string region_restrictions = 23;
}

message Volume {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  repeated string languages = 2;
  google.protobuf.Timestamp release_date = 3;
  //repeated Media media = 4;

  /*
  Valid Censorships
	Unknown censorship
	UNKNOWN

	No censorship
	NONE

	Censorship applied
	CENSORED
  */
  string  censorship = 5;

  /*
  Valid Publishing types:
  Unknown status
	UNKNOWN
  
	Self publishing
	SELF

	Publisched by a corporation
	CORPORATE
  */
  string publishing_type = 6; 
  string asin = 7;
  string gtin = 8;

  int32 identifier = 9;
  // ReadingComplexity reading_complexity = 10;

  repeated Text names = 11;
  repeated Text aliases = 12;
  repeated Text descriptions = 13;
  string cover_image_id = 14;
  string banner_image_id = 15;
  repeated Website websites = 16;
  repeated Marketplace marketplaces = 17;
  repeated Cast starring = 18;
  repeated Collaboration staff = 19;

  /*
  Valid maturity Ratings:

  Over 18 in USA
  MTR_RTN_USA_NC17

  Over 18 in USA
  MTR_RTN_USA_R

  Over 13 in USA
  MTR_RTN_USA_PG13

  Over 3 in USA
  MTR_RTN_USA_PG

  Safe in USA
  MTR_RTN_USA_G
  */
  repeated string maturity_ratings = 20;

  /*
  Valid Region Restrictions:
  No Region Restriction
  NONE

  The Entity is illegal following the U.N. guidelines
  ILLEGAL
  */
  repeated string region_restrictions = 21;
}


message Text {
  string text = 1;
  string localization = 2;
}

message Running {
  google.protobuf.Timestamp start_time = 1 [(google.api.field_behavior) = REQUIRED];
  google.protobuf.Timestamp end_time = 2;
  string localization = 3 [(google.api.field_behavior) = REQUIRED];
}

message Edge {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

/*
ContentRelation represent the relation between 2 different content.
The ContentReleation field is common to both the content, therefore the server do not need
to have both relations (from content A to B, and from B to A) because it will generate automatically
the reverse relation.

> Sending A sequel of B, the server will generate B prequel A

The relation has to be read as
entity -> has <relation> -> which is <related>
EG: Naruto -> Sequel -> Naruto Shippuden = <Naruto> has <sequel>, which is <Naruto Shippuden>
*/
message ContentRelation {
  Edge related = 1 [(google.api.field_behavior) = REQUIRED];

  /*
  Valid relations:
  ADAPTATION implies that the subject is the base from which the object has been adapted
  ADAPTATION

  BASE Adaptation
  BASE

  SAMESETTING Same universe/world/reality/timeline with completely different characters.
  SAME_SETTING

  ALTSETTING Same universe/world/reality/timeline same characters with different universe/world/reality/timeline.
  ALTERNATIVE_SETTING

  ALTVERSION alternative version Same setting, same characters, story is told differently.
  ALTERNATIVE_VERSION

  CHARACTER When characters appear in both series, but is not a spin-off
  CHARACTER

  FULLSTORY the object is full story of the subject
  this implies that the subject is a summary of the object
  FULL_STORY

  SUMMARY summary
  SUMMARY

  PARENTSTORY the object is the parent story of the subject
  this implies that the subject is a spin-off of the object
  PARENT_STORY

  SpinOff spin off
  SPIN_OFF

  PREQUEL prequel
  PREQUEL

  SEQUEL sequel
  SEQUEL

  MAINSTORY the object is the main story from which the subject has been created
  this implies that the subject is a side story of the object
  MAIN_STORY

  SIDESTORY side story
  SIDE_STORY

  ORIGINAL the object is the original of the subject
  this implies that the subject is the parody or fan made object
  ORIGINAL

  PARODY is parody
  PARODY
  */
  string relation = 2 [(google.api.field_behavior) = REQUIRED];
}

/*
Cast represnt the relation between a character and a content.
The cast is always field of the content and the Edge points to the character.
*/
message Cast {
  Edge character = 1 [(google.api.field_behavior) = REQUIRED];

  /*
  Valid relations:
  MAIN
  SUPPORT
  APPEARS
  */
  string relation = 2 [(google.api.field_behavior) = REQUIRED];
}

/*
Collaboration represent the relation between a content and a person or organization.
The collaboration must be localizaed and it must carry the information about the role of the collaborator.
The Collaboration is always field of the content and the Edge points to the collaborator.
The localization must be a valid ISO3 localization which identifies the language/full localization of the content's version 
for which the collaborator collaborated
*/
message Collaboration {
  Edge collaborator = 1 [(google.api.field_behavior) = REQUIRED];
  string localization = 2 [(google.api.field_behavior) = REQUIRED];
  string role = 3 [(google.api.field_behavior) = REQUIRED];
}

/*
Voice Acting represent voice given by a person to a voiced entity in a specific content
The Voice Acting is always field of the content and it must be localized.
The localization must be a valid ISO3 localization which identifies the language/full localization of the content's version 
for which the actor gave the voice to the entity
*/
message VoiceActing {
  Edge voiced = 1 [(google.api.field_behavior) = REQUIRED];
  Edge actor = 2 [(google.api.field_behavior) = REQUIRED];
  string localization = 3 [(google.api.field_behavior) = REQUIRED];
  
  /*
  Valid values:
  TRUE
  FALSE
  UNKNOWN
  */
  string primary = 4 [(google.api.field_behavior) = REQUIRED];
}

/*
Any kind of website related to the entity.
Could be official website, twitter, or external resources such as wikipedia
*/
message Website {
  string url = 1 [(google.api.field_behavior) = REQUIRED];
}

/*
Marketplace is where to consume the content.
The name field must point to a valid valid marketplace id in order to load icon and name of the marketplace.
If the marketplace is limited to some specific country, add them to the field region following the IOS3 standard
*/
message Marketplace {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  string url = 2 [(google.api.field_behavior) = REQUIRED];
  string region = 3;
}

/*
Soundtrack exposes the information about which Track has been used in which Content in which localization and for what.
The localization must be a valid ISO3 localization which identifies the language/full localization of the content's version 
for which the Track is used
*/
message Soundtrack {
  Edge track = 1 [(google.api.field_behavior) = REQUIRED];

  /*
  Valid Soundtrack types:
  Unknown type
  UNKNOWN

  The track is used as ending
  ENDING

  The track is used as opening
  OPENING

  The track is used as insert song
  INSERT

  The track is used as background song
  BACKGROUND

  The track is used as image song
  IMAGE

  The track is used as theme song
  THEME
  */
  string type = 2 [(google.api.field_behavior) = REQUIRED];

  /*
  Valid track versions:
  Unknown version
  UNKNOWN

  Normal version of the track
  NORMAL

  Instrumental version
  INSTRUMENTAL

  Only piano version
  PIANO

  Japanese version
  JAPANESE

  English version
  ENGLISH

  TV version of the track
  TV

  The track has been mixed with another
  MIX

  The track has been remixed
  REMIX

  Extended version of the track
  EXTENDED

  other
  OTHER
  */
  string version = 3 [(google.api.field_behavior) = REQUIRED];
  string localization = 4 [(google.api.field_behavior) = REQUIRED];
}

/*
TrackListing exposes the information about which Track has been released from which MusicRelease in which version and in whic order.
*/
message TrackListing {
  Edge musicRelease = 1 [(google.api.field_behavior) = REQUIRED];

  /*
  Valid track versions:
  Unknown version
  UNKNOWN

  Normal version of the track
  NORMAL

  Instrumental version
  INSTRUMENTAL

  Only piano version
  PIANO

  Japanese version
  JAPANESE

  English version
  ENGLISH

  TV version of the track
  TV

  The track has been mixed with another
  MIX

  The track has been remixed
  REMIX

  Extended version of the track
  EXTENDED
  
  other
  OTHER
  */
  string version = 2 [(google.api.field_behavior) = REQUIRED];
  int32 index = 3 [(google.api.field_behavior) = REQUIRED];
}
