syntax = "proto3";

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package animeshon.knowledge.v1alpha1;

option go_package = "github.com/animeapis/go-genproto/knowledge/v1alpha1;knowledge";
option java_package = "com.animeshon.knowledge.v1alpha1";
option java_multiple_files = true;
option ruby_package = "Animeshon::Knowledge::v1Alpha1";

service Knowledge {
  option (google.api.default_host) = "knowledge.animeapis.com";

  rpc GetContribution(GetContributionRequest) returns (Contribution) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=users/*/contributions/*}"
    };
  }

  rpc ListContributions(ListContributionsRequest) returns (ListContributionsResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/{parent=users/*}/contributions"
    };
  }

  rpc CreateContribution(CreateContributionRequest) returns (Contribution) {
    option (google.api.http) = {
      post: "/v1alpha1/{parent=users/*}/contributions"
      body: "*"
    };
  }

  rpc GetContributionChanges(GetContributionChangesRequest) returns (ContributionChanges) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=users/*/contributions/*}:changes"
    };
  }

  // ReviewContribution allows moderators or the owner to modify and correct the contribution
  // while in the PENDING or DRAFT state
  rpc ReviewContribution(ReviewContributionRequest) returns (Contribution) {
    option (google.api.http) = {
      post: "/v1alpha1/{name=users/*/contributions/*}:review"
      body: "*"
    };
  }

  // ApproveContribution approves the contribution and applies the changes
  rpc ApproveContribution(ApproveContributionRequest) returns (Contribution) {
    option (google.api.http) = {
      post: "/v1alpha1/{name=users/*/contributions/*}:approve"
      body: "*"
    };
  }

  // RejectContribution rejects the contribution and DESTROYS all the changes
  rpc RejectContribution(RejectContributionRequest) returns (Contribution) {
    option (google.api.http) = {
      post: "/v1alpha1/{name=users/*/contributions/*}:reject"
      body: "*"
    };
  }

  // AllocateResourceName reserves a new resource name for entities which are not already part of
  // Animeshon's Encyclopedia 
  rpc AllocateResourceName(AllocateResourceNameRequest) returns (AllocateResourceNameResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/contributions:allocateResourceName"
    };
  }
}

message AllocateResourceNameRequest {
  // The resource kind of the resource to migrate.
  string kind = 1 [(google.api.field_behavior) = REQUIRED];
}

message AllocateResourceNameResponse {
  // The resource name of the resource to migrate.
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ContributionChanges decribes all the operations the contribution performs on an arbitrary number of entities
message ContributionChanges {
  // List of additions of the contribution
  repeated EntryEntity additions = 2;

  // List of deletions of the cotributions
  // Deleletion on primary entities (Anime/GraphicNovel/...) replace the old values
  // while deletion on relations preserve the relation itself but mark it as deleted
  repeated EntryEntity deletions = 3;
}

// Contribution is the overall reppresentation of the contribution
message Contribution {
  enum State {
    PENDING = 0;
    APPROVED = 1;
    REJECTED = 2;
    DRAFT = 3;
  }
  // The resource name of the contribution.
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // Who reviewed (accepting or rejecting) the contribution.
  // Null if the contribution is still in reviewing phase
  string reviewer = 3 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The state of the contribution
  State state = 4 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Arbitrary human readible contribution
  string display_name = 5;

  // Incremental value which specifies how many times the contribution has been reviewed.
  int32 generation = 6 [(google.api.field_behavior) = OUTPUT_ONLY];

  // When the album was created.
  google.protobuf.Timestamp create_time = 7 [(google.api.field_behavior) = OUTPUT_ONLY];

  // When the album was updated.
  google.protobuf.Timestamp update_time = 8 [(google.api.field_behavior) = OUTPUT_ONLY];

 // When the album was reviewed.
  google.protobuf.Timestamp review_time = 9 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ReviewContributionRequest specifies the edit to apply to an existing contribution
message ReviewContributionRequest {
  // Name of the contribution
  string name = 1;

  // Optional comment on the review
  string comment = 2;

  // Changes to the existing contribution
  // New changes will be added on top of the existing ones
  ContributionChanges changes = 3;

  // Changes to discard from the contribution
  // Discarded changes will be completely removed from the contribution
  ContributionChanges discards = 4;
}

message CreateContributionRequest {
  // The parent resource where this contribution will be created.
  string parent = 1 [(google.api.field_behavior) = REQUIRED];

  Contribution contribution = 2;

  ContributionChanges changes = 3;
}

message ListContributionsRequest {
  // The parent, which owns this collection of contributions.
  string parent = 1 [(google.api.field_behavior) = REQUIRED];

  /*
  The maximum number of users to return. Server may return fewer users
  than requested. If unspecified, server will pick an appropriate default.
  */
  int32 page_size = 2;

  // The value returned from the previous call.
  string page_token = 3;

  // A filter to be applied to results.
  string filter = 4;
}

message ListContributionsResponse {
  // The list of contributions.
  repeated Contribution contributions = 1;

  // A token to retrieve next page of results.
  string next_page_token = 2;
}

message GetContributionChangesRequest {
  // The resource name of the requested contribution.
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetContributionRequest {
  // The resource name of the requested contribution.
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message ApproveContributionRequest {
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message RejectContributionRequest {
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message EntryEntity {
  oneof entity {
    Anime anime = 1;
    Canonical canonical = 2;
    Chapter chapter = 3;
    Character character = 4;
    Episode episode = 5;
    GameRelease game_release = 6;
    GraphicNovel graphic_novel = 7;
    LightNovel light_novel = 8;
    Organization organization = 9;
    Person person = 10;
    Track track = 11;
    Universe universe = 12;
    VisualNovel visual_novel = 13;
    Volume volume = 14;
  }
}

message Anime {
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  /*
  Type of the anime
  Valid anime types:

  Unknown type
  UNKNOWN

  Tv series
  TV

  Movie
  MOVIE

  Original video animation
  OVA

  Original Net Anime
  ONA

  Special
  SPECIAL

  Web anime
  WEB

  Music video
  MUSIC_VIDEO

  Other
  OTHER
  */
  string type = 2;
  // List of episode part of the anime
  repeated Edge episodes = 3;
  // Number of scheduled episodes
  // This field is useful for season anime which already announced how many episodes will be aired
  int32 episode_count = 4;
  // List of localized names of the entity
  repeated Text names = 5;
  // List of localized aliases of the entity
  repeated Text aliases = 6;
  // List of localized descriptions of the entity
  repeated Text descriptions = 7;
  // Cover Image id of the entity
  string cover_image_id = 8;
  // Banner Image id of the entity
  string banner_image_id = 9;
  // List of websiste related to the entity.
  // Websites mught be official websites, Social, Wiki Entries
  repeated Website websites = 10;
  // List of marketplaces related to the entry.
  // Maketplaces tells where to buy / consume / read the entity
  repeated Marketplace marketplaces = 11;
  /*
  Status of the content
  Valid content statuses:

  Unknown status
  UNKNOWN

  Publishing or airing is still ongoing.
  ONGOING

  Publishing or airing has been completed.
  COMPLETED

  Publishing or airing has been scheduled.
  SCHEDULED

  Publishing or airing started but never finished.
  INTERRUPTED

  Publishing or airing was scheduled but later canceled.
  CANCELED

  Publishing or airing has been suspended / has been put on hold.
  SUSPENDED

  The content is in work in progress
  WORK_IN_PROGRESS
  */
  string status = 12;
  //List of relations with other content
  repeated ContentRelation content_relations = 13;
  /*
  Publishin Type specifies wether the content has been produced by a self published creator or if it's backed by a corporation
  
  Valid Publishing types:
  Unknown status
	UNKNOWN

	Self publishing
	SELF

	Published by a corporation
	CORPORATE
  */
  string publishing_type = 14;
  /*
  Original specifies if the idea behind the content is original or if it's base on an existing opera.
  Parodies of other content are normally not original, because charactes/settings/storyline are not owned by the creator.

  Valid values:
  TRUE
  FALSE
  UNKNOWN
  */
  string original = 15;
  // List of localized airing/publishing periods of the content
  repeated Running runnings = 16;
  // The release date in homeland of the content
  google.protobuf.Timestamp release_date = 17;
  // List of characters starred in the content
  repeated Cast starring = 18;
  // List of people/organizations which contributed to the production/distribution of the content
  repeated Collaboration staff = 19;
  // List of genres the entity is part of
  repeated Edge genres = 20;
  // Releases are all those entities which practically make the content consumable
  // Some examples are: Volumes for GraphicNovels/LightNovels/Chapters, BlueRays for Anime, Collector Editions... 
  // Releases are all those entities which practically make the content consumable
  // Some examples are: Volumes for GraphicNovels/LightNovels/Chapters, BlueRays for Anime, Collector Editions... 
  repeated Edge releases = 21;
  // List of soundtracks in the content
  repeated Soundtrack soundtracks = 22;
  // List of voice actors giving voice to the characters in the content
  repeated VoiceActing voiceactings = 23;
  /*
  Maturity ratings describes what it the minum age to legally consume a content  
  Valid maturity Ratings:

  Over 18 in USA
  MTR_RTN_USA_NC17

  Over 18 in USA
  MTR_RTN_USA_R

  Over 13 in USA
  MTR_RTN_USA_PG13

  Over 3 in USA
  MTR_RTN_USA_PG

  Safe in USA
  MTR_RTN_USA_G
  */
  repeated string maturity_ratings = 24;
  /*
  Region restrictions mark the content as illegal in some region given the local regulations
  Valid Region Restrictions:

  No Region Restriction
  NONE

  The Entity is illegal following the U.N. guidelines
  ILLEGAL
  */
  repeated string region_restrictions = 25;
}

message Canonical {
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  // List of localized names of the entity
  repeated Text names = 2;
  // List of localized aliases of the entity
  repeated Text aliases = 3;
  // List of localized descriptions of the entity
  repeated Text descriptions = 4;
  // Cover Image id of the entity
  string cover_image_id = 5;
  // Banner Image id of the entity
  string banner_image_id = 6;
  // List of websiste related to the entity.
  // Websites mught be official websites, Social, Wiki Entries
  repeated Website websites = 7;
  // List of marketplaces related to the entry.
  // Maketplaces tells where to buy / consume / read the entity
  repeated Marketplace marketplaces = 8;
  // List of contents part of the canonical
  // Canonicals can include Anime, GraphicNovels, LightNovels and VisualNovels
  repeated Edge contents = 9;
}

message Chapter {
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  /*
  Type of the chapter
  Valid Chapter types

  Unknown type
  UNKNOWN

  Regular chapter
  REGULAR

  Extra chapter
  EXTRA
  */
  string type = 2;
  // Incremental index of the chapter.
  // Describes the release order
  int32 index = 3;
  // Number of page of the chapter without extra pages
  int32 page_count = 4;
  // The release date in homeland of the content
  google.protobuf.Timestamp release_date = 5;
  // List of localized names of the entity
  repeated Text names = 6;
  // List of localized aliases of the entity
  repeated Text aliases = 7;
  // List of localized descriptions of the entity
  repeated Text descriptions = 8;
  // Cover Image id of the entity
  string cover_image_id = 9;
  // Banner Image id of the entity
  string banner_image_id = 10;
  // List of websiste related to the entity.
  // Websites mught be official websites, Social, Wiki Entries
  repeated Website websites = 11;
  // List of marketplaces related to the entry.
  // Maketplaces tells where to buy / consume / read the entity
  repeated Marketplace marketplaces = 12;
  // List of characters starred in the content
  repeated Cast starring = 13;
  // List of people/organizations which contributed to the production/distribution of the content
  repeated Collaboration staff = 14;
  // Releases are all those entities which practically make the content consumable
  // Some examples are: Volumes for GraphicNovels/LightNovels/Chapters, BlueRays for Anime, Collector Editions... 
  repeated Edge releases = 15;
  /*
  Maturity ratings describes what it the minum age to legally consume a content  
  Valid maturity Ratings:

  Over 18 in USA
  MTR_RTN_USA_NC17

  Over 18 in USA
  MTR_RTN_USA_R

  Over 13 in USA
  MTR_RTN_USA_PG13

  Over 3 in USA
  MTR_RTN_USA_PG

  Safe in USA
  MTR_RTN_USA_G
  */
  repeated string maturity_ratings = 16;
  /*
  Region restrictions mark the content as illegal in some region given the local regulations
  Valid Region Restrictions:

  No Region Restriction
  NONE

  The Entity is illegal following the U.N. guidelines
  ILLEGAL
  */
  repeated string region_restrictions = 17;
}

message Character {
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  // The day the character is born
  int32 birthday_day = 2;
  // The month the character is born
  int32 birthday_month = 3;
  /*
  Gender 
  Valid Gender values:

  Unknown gender
  UNKNOWN

	Male
	MALE

	Female
	FEMALE

	Male which seems a female
	MALE_TRAP

	Female which seems a male
	FEMALE_TRAP

	Both male and female
	HERMAPHRODITIC

	None of the default gender applies
	OTHER

	The gender is undefined
	UNDEFINED
  
	The gender something between male and female
	INTERSEXUAL
  */
  string gender = 7;
  /*
  Blod Type
  Valid blood types:

  Unknown blood type
	UNKNOWN

	A (no Rh info)
	A

	B (no Rh info)
	B

	AB (no Rh info)
	AB
  
	O (no Rh info)
	O

	A+
	A_PLUS

	B+
	B_PLUS

	AB+
	AB_PLUS
  
	O+
	O_PLUS

	A-
	A_MINUS

	B-
	B_MINUS

	AB-
	AB_MINUS

	O-
	O_MINUS
  */
  string blood_type = 8;
  /*
  Valid Cup Sizes:
  UNKNOWN
  AAA 
  AA
  A
  B
  C
  D
  E
  F
  G
  H
  I
  J
  K
  L
  M
  N
  O
  P
  Q
  R
  S
  T
  U
  V
  W
  X
  Y
  Z
  */
  string cup_size = 9;
  /*
  Shown age of the character when the numeric age is not enough to identify the character
  Valid Age Range:

  Unknown
  UNKNOWN

  The character is an infant. 1-3
  INFANT

  The character is a child. 4-12
  CHILD

  The character is a teen. 13-17
  TEEN

  The character is a young adult. 18-25
  YOUNG_ADULT

  The character is a grown up adult. 26-59
  ADULT

  The character is an eldery. 60+
  ELDERY

  The character is an entity which the concept of age do not makes sense (robots, ...)
  NOT_APPLICABLE

  The character can't be fit in any any of the other category. (Gods, planets, ...)
  WITHOUT
  */
  string age_range = 10;
  // Precise age of the character
  int32 age = 11;
  // Height of the character
  int32 height = 12;
  // Weight of the character
  int32 weight = 13;
  // Bust size of the character
  int32 bust = 14;
  // Waist size of the character
  int32 waist = 15;
  // Hips size of the character
  int32 hips = 16;
  // List of localized names of the entity
  repeated Text names = 17;
  // List of localized aliases of the entity
  repeated Text aliases = 18;
  // List of localized descriptions of the entity
  repeated Text descriptions = 19;
  // Cover Image id of the entity
  string cover_image_id = 20;
  // Banner Image id of the entity
  string banner_image_id = 21;
  // List of websiste related to the entity.
  // Websites mught be official websites, Social, Wiki Entries
  repeated Website websites = 22;
  // List of marketplaces related to the entry.
  // Maketplaces tells where to buy / consume / read the entity
  repeated Marketplace marketplaces = 23;
  //repeated Edge guise_of = 24;
}

message Episode {
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  /*
  Type of the episode
  Valid Episode types:

  Unknown episode type
  UNKNOWN

  Regular episode
  REGULAR

  Recapitolation episode
  RECAP

  Parody Fan made
  PARODY

  Promo episode
  PROMO

  Special episode
  SPECIAL

  Opening / ending episode
  OPENING_ENDING

  Other
  OTHER
  */
  string type = 2;
  // Incremental index of the episode.
  // Describes the release order 
  int32 index = 3;
  // The release date in homeland of the content
  google.protobuf.Timestamp release_date = 4;
  // List of localized names of the entity
  repeated Text names = 5;
  // List of localized aliases of the entity
  repeated Text aliases = 6;
  // List of localized descriptions of the entity
  repeated Text descriptions = 7;
  // Cover Image id of the entity
  string cover_image_id = 8;
  // Banner Image id of the entity
  string banner_image_id = 9;
  // List of websiste related to the entity.
  // Websites mught be official websites, Social, Wiki Entries
  repeated Website websites = 10;
  // List of marketplaces related to the entry.
  // Maketplaces tells where to buy / consume / read the entity
  repeated Marketplace marketplaces = 11;
  // List of characters starred in the content
  repeated Cast starring = 12;
  // List of people/organizations which contributed to the production/distribution of the content
  repeated Collaboration staff = 13;
  // List of soundtracks in the content
  repeated Soundtrack soundtracks = 14;
  // List of voice actors giving voice to the characters in the content
  repeated VoiceActing voiceactings = 15;

  /*
  Maturity ratings describes what it the minum age to legally consume a content  
  Valid maturity Ratings:

  Over 18 in USA
  MTR_RTN_USA_NC17

  Over 18 in USA
  MTR_RTN_USA_R

  Over 13 in USA
  MTR_RTN_USA_PG13

  Over 3 in USA
  MTR_RTN_USA_PG

  Safe in USA
  MTR_RTN_USA_G
  */
  repeated string maturity_ratings = 16;

  /*
  Region restrictions mark the content as illegal in some region given the local regulations
  Valid Region Restrictions:

  No Region Restriction
  NONE

  The Entity is illegal following the U.N. guidelines
  ILLEGAL
  */
  repeated string region_restrictions = 17;

  // Length of the episode in seconds.
  int32 length_seconds = 18;
}

message GameRelease {
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  // List of languages the release is localized in
  repeated string languages = 2;
  // The release date in homeland of the content
  google.protobuf.Timestamp release_date = 3;
  //repeated Media media = 4;

  /*
  Valid Censorships
	Unknown censorship
	UNKNOWN

	No censorship
	NONE

	Censorship applied
	CENSORED
  */
  string censorship = 5;

  /*
  Publishin Type specifies wether the content has been produced by a self published creator or if it's backed by a corporation
  Valid Publishing types:

  Unknown status
	UNKNOWN
  
	Self publishing
	SELF

	Published by a corporation
	CORPORATE
  */
  string publishing_type = 6; 
  // Amazon identifier of the good
  string asin = 7;
  // Global Trade identifier of the good
  string gtin = 8;

  /*
  valid game release types:
  Unknown game release type
  UNKNOWN

  The release is complete
  COMPLETE

  The release is only a part of the content
  PARTIAL

  The release is just trial
  TRIAL

  The release is a dlc
  DLC
  */
  string type = 9;
  /*
  If patch the release is not sold alone and it's ment to be applied to an existing game
  Valid values:

  TRUE
  FALSE
  UNKNOWN
  */
  string IsPatch = 12;
  /*
  dub_degree describes how much of the game is dubbed
  Valid game dub degree

  Unknown DUB degree
  UNKNOWN

  Not dubbed
  NONE

  Only erotic scenes are dubbed
  ERO_ONLY

  Partially dubbed
  PARTIAL

  Full dubbed
  FULL
  */
  string dub_degree = 14;
  /*
  story_animation_degree specifies how well the story scenes are animated
  Valid game animation degrees:

  Unknown animation degree
  UNKNOWN

  No animation
  NONE

  Simple animations
  SIMPLE

  Partial animation -  Some fully animated scenes
  PARTIAL

  Fully animated
  FULL
  */
  string story_animation_degree = 15;
  /*
  ero_animation_degree specifies how well the erotic scenes are animated
  Valid game animation degrees:

  Unknown animation degree
  UNKNOWN

  No animation
  NONE

  Simple animations
  SIMPLE

  Partial animation -  Some fully animated scenes
  PARTIAL
  
  Fully animated
  FULL
  */
  string ero_animation_degree = 16;
  string engine = 17;
  /*
  Valid Platforms:
  Unknown platform
  UNKNOWN 

  Windows
  WINDOWS 

  DOS
  DOS 

  LINUX
  LINUX 

  Mac
  MAC 

  IOs devices
  IOS 

  Android
  ANDROID 

  DVD player
  DVD_PLAYER 

  Blu-ray Player
  BLU_RAY_PLAYER 

  FM Towns https://en.wikipedia.org/wiki/FM_Towns
  FM_TOWNS 

  FM-7 Towns https://en.wikipedia.org/wiki/FM-7
  FM7_TOWNS 

  FM-8 Towns https://en.wikipedia.org/wiki/FM-8
  FM8_TOWNS 

  Gameboy advance
  GAMEBOY_ADVANCE 

  Gameboy color
  GAMEBOY_COLOR 

  MSX Computer https://en.wikipedia.org/wiki/MSX
  MSX 

  Nintendo DS
  NINTENDO_DS 

  NES platform
  NES 

  C88 https://en.wikipedia.org/wiki/PC-8800_series
  P88 

  PC98 https://en.wikipedia.org/wiki/PC-9800_series
  P98 

  PC Engine
  PC_ENGINE 

  Pc-FX https://en.wikipedia.org/wiki/PC-FX
  PC_FX 

  Playstation portable
  PSP 

  Playstation 1
  PS1 

  Playstation 2
  PS2 

  Playstation 3
  PS3 

  Playstation 4
  PS4 

  Playstation 5
  PS5 

  Playstation vita
  PS_VITA 

  Dgramcast https://en.wikipedia.org/wiki/Dreamcast
  DGRAMCAST 

  Sega Staurn
  SEGA_SATURN 

  Sega Mega-CD
  SEGA_MEGACD 

  Super Nintendo
  SUPER_NINTENDO 

  Nintendo Switch
  NINTENDO_SWITCH 

  Ninentdo WII
  NINTENDO_WII 

  Nintendo WI
  NINTENDO_WII_U 

  Nintendo 3Ds
  NINTENDO_3DS 

  X68000 https://en.wikipedia.org/wiki/X68000
  X68000 

  Xbox One
  XBOX_ONE 

  Xbox 360
  XBOX_360 

  Xbox
  XBOX 

  Xbox Series X
  XBOX_X 

  Website
  WEBSITE 

  Visual Novel DS https://github.com/BASLQC/vnds/wiki
  VN_DS 

  Sharp X1 https://en.wikipedia.org/wiki/Sharp_X1
  SHARP_X1 

  3DO Interactive Multiplayer
  INTERACTIVE_3DO 

  Other
  OTHER 

  Mobile Other
  MOBILE_OTHER
  */
  repeated string platforms = 18;
  // List of localized names of the entity
  repeated Text names = 19;
  // List of localized aliases of the entity
  repeated Text aliases = 20;
  // List of localized descriptions of the entity
  repeated Text descriptions = 21;
  // Cover Image id of the entity
  string cover_image_id = 22;
  // Banner Image id of the entity
  string banner_image_id = 23;
  // List of websiste related to the entity.
  // Websites mught be official websites, Social, Wiki Entries
  repeated Website websites = 24;
  // List of marketplaces related to the entry.
  // Maketplaces tells where to buy / consume / read the entity
  repeated Marketplace marketplaces = 25;
  // List of characters starred in the content
  repeated Cast starring = 26;
  // List of people/organizations which contributed to the production/distribution of the content
  repeated Collaboration staff = 27;
  // List of soundtracks in the content
  repeated Soundtrack soundtracks = 28;
  // List of voice actors giving voice to the characters in the content
  repeated VoiceActing voiceactings = 29;
  /*
  Maturity ratings describes what it the minum age to legally consume a content  
  Valid maturity Ratings:

  Over 18 in USA
  MTR_RTN_USA_NC17

  Over 18 in USA
  MTR_RTN_USA_R

  Over 13 in USA
  MTR_RTN_USA_PG13

  Over 3 in USA
  MTR_RTN_USA_PG

  Safe in USA
  MTR_RTN_USA_G
  */
  repeated string maturity_ratings = 30;
  /*
  Region restrictions mark the content as illegal in some region given the local regulations
  Valid Region Restrictions:

  No Region Restriction
  NONE

  The Entity is illegal following the U.N. guidelines
  ILLEGAL
  */
  repeated string region_restrictions = 31;
  /*
  Original specifies if the idea behind the content is original or if it's base on an existing opera.
  Parodies of other content are normally not original, because charactes/settings/storyline are not owned by the creator.

  Valid values:
  TRUE
  FALSE
  UNKNOWN
  */
  string original = 32;
}

message GraphicNovel {
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  /*
  Type of the graphic novel
  Valid Graphic Novel types:

  Unknown graphic novel type
  UNKNOWN

  Japanese GraphicNovel
  MANGA

  One shot (only one volume)
  ONE_SHOT

  Cinese GraphicNovel
  MANHUA

  Korean GraphicNovel
  MANHWA

  Original English Language
  OEL

  Web native comic (webtoon)
  WEB_COMIC

  GraphicNovel consisting of 4 pannels
  YON_KOMA

  Other
  OTHER
  */
  string type = 2;
  // List of chaters part of the graphic novel
  repeated Edge chapters = 3;
  // Number of scheduled chapters
  // This field is useful for graphic novels which already announced how many chapter will be published
  int32 chapter_count = 4;
  // List of localized names of the entity
  repeated Text names = 5;
  // List of localized aliases of the entity
  repeated Text aliases = 6;
  // List of localized descriptions of the entity
  repeated Text descriptions = 7;
  // Cover Image id of the entity
  string cover_image_id = 8;
  // Banner Image id of the entity
  string banner_image_id = 9;
  // List of websiste related to the entity.
  // Websites mught be official websites, Social, Wiki Entries
  repeated Website websites = 10;
  // List of marketplaces related to the entry.
  // Maketplaces tells where to buy / consume / read the entity
  repeated Marketplace marketplaces = 11;
  /*
  Status of the content
  Valid content statuses:

  Unknown status
  UNKNOWN

  Publishing or airing is still ongoing.
  ONGOING

  Publishing or airing has been completed.
  COMPLETED

  Publishing or airing has been scheduled.
  SCHEDULED

  Publishing or airing started but never finished.
  INTERRUPTED

  Publishing or airing was scheduled but later canceled.
  CANCELED

  Publishing or airing has been suspended / has been put on hold.
  SUSPENDED

  The content is in work in progress
  WORK_IN_PROGRESS
  */
  string status = 12;
  //List of relations with other content
  repeated ContentRelation content_relations = 13;
  /*
  Publishin Type specifies wether the content has been produced by a self published creator or if it's backed by a corporation
  Valid Publishing types:
  Unknown status
	UNKNOWN
  
	Self publishing
	SELF

	Published by a corporation
	CORPORATE
  */
  string publishing_type = 14;
  /*
  Original specifies if the idea behind the content is original or if it's base on an existing opera.
  Parodies of other content are normally not original, because charactes/settings/storyline are not owned by the creator.

  Valid values:
  TRUE
  FALSE
  UNKNOWN
  */
  string original = 15;
  // List of localized airing/publishing periods of the content
  repeated Running runnings = 16;
  // The release date in homeland of the content
  google.protobuf.Timestamp release_date = 17;
  // List of characters starred in the content
  repeated Cast starring = 18;
  // List of people/organizations which contributed to the production/distribution of the content
  repeated Collaboration staff = 19;
  // List of genres the entity is part of
  repeated Edge genres = 20;
  // Releases are all those entities which practically make the content consumable
  // Some examples are: Volumes for GraphicNovels/LightNovels/Chapters, BlueRays for Anime, Collector Editions... 
  repeated Edge releases = 21;
  /*
  Maturity ratings describes what it the minum age to legally consume a content  
  Valid maturity Ratings:

  Over 18 in USA
  MTR_RTN_USA_NC17

  Over 18 in USA
  MTR_RTN_USA_R

  Over 13 in USA
  MTR_RTN_USA_PG13

  Over 3 in USA
  MTR_RTN_USA_PG

  Safe in USA
  MTR_RTN_USA_G
  */
  repeated string maturity_ratings = 22;
  /*
  Region restrictions mark the content as illegal in some region given the local regulations
  Valid Region Restrictions:

  No Region Restriction
  NONE

  The Entity is illegal following the U.N. guidelines
  ILLEGAL
  */
  repeated string region_restrictions = 23;
  // List of volumes releasing the content
  repeated Edge volumes = 24;
}

message LightNovel {
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  // List of chaters part of the light novel
  repeated Edge chapters = 2;
  // Number of scheduled chapters
  // This field is useful for light novels which already announced how many chapter will be published
  int32 chapter_count = 3;
  // List of localized names of the entity
  repeated Text names = 4;
  // List of localized aliases of the entity
  repeated Text aliases = 5;
  // List of localized descriptions of the entity
  repeated Text descriptions = 6;
  // Cover Image id of the entity
  string cover_image_id = 7;
  // Banner Image id of the entity
  string banner_image_id = 8;
  // List of websiste related to the entity.
  // Websites mught be official websites, Social, Wiki Entries
  repeated Website websites = 9;
  // List of marketplaces related to the entry.
  // Maketplaces tells where to buy / consume / read the entity
  repeated Marketplace marketplaces = 10;
  /*
  Status of the content
  Valid content statuses:

  Unknown status
  UNKNOWN

  Publishing or airing is still ongoing.
  ONGOING

  Publishing or airing has been completed.
  COMPLETED

  Publishing or airing has been scheduled.
  SCHEDULED

  Publishing or airing started but never finished.
  INTERRUPTED

  Publishing or airing was scheduled but later canceled.
  CANCELED

  Publishing or airing has been suspended / has been put on hold.
  SUSPENDED

  The content is in work in progress
  WORK_IN_PROGRESS
  */
  string status = 11;
  //List of relations with other content
  repeated ContentRelation content_relations = 12;
  /*
  Publishin Type specifies wether the content has been produced by a self published creator or if it's backed by a corporation
  Valid Publishing types:

  Unknown status
	UNKNOWN

	Self publishing
	SELF

	Published by a corporation
	CORPORATE
  */
  string publishing_type = 13;
  /*
  Original specifies if the idea behind the content is original or if it's base on an existing opera.
  Parodies of other content are normally not original, because charactes/settings/storyline are not owned by the creator.

  Valid values:
  TRUE
  FALSE
  UNKNOWN
  */
  string original = 14;
  // List of localized airing/publishing periods of the content
  repeated Running runnings = 15;
  // The release date in homeland of the content
  google.protobuf.Timestamp release_date = 16;
  // List of characters starred in the content
  repeated Cast starring = 17;
  // List of people/organizations which contributed to the production/distribution of the content
  repeated Collaboration staff = 18;
  // List of genres the entity is part of
  repeated Edge genres = 19;
  // Releases are all those entities which practically make the content consumable
  // Some examples are: Volumes for GraphicNovels/LightNovels/Chapters, BlueRays for Anime, Collector Editions... 
  repeated Edge releases = 20;
  /*
  Maturity ratings describes what it the minum age to legally consume a content  
  Valid maturity Ratings:

  Over 18 in USA
  MTR_RTN_USA_NC17

  Over 18 in USA
  MTR_RTN_USA_R

  Over 13 in USA
  MTR_RTN_USA_PG13

  Over 3 in USA
  MTR_RTN_USA_PG

  Safe in USA
  MTR_RTN_USA_G
  */
  repeated string maturity_ratings = 21;
  /*
  Region restrictions mark the content as illegal in some region given the local regulations
  Valid Region Restrictions:

  No Region Restriction
  NONE

  The Entity is illegal following the U.N. guidelines
  ILLEGAL
  */
  repeated string region_restrictions = 22;
  // List of volumes releasing the content
  repeated Edge volumes = 23;
}

message Organization {
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  /*
  Type of the organization
  Valid Organization types:

  Uunknown organization type
  UNKNOWN

  Coorporation / company
  CORPORATE

  Circle of people
  CIRCLE
  */
  string type = 2;
  // Foundation date of the organization
  google.protobuf.Timestamp foundation_date = 3;
  // List of localized names of the entity
  repeated Text names = 5;
  // List of localized aliases of the entity
  repeated Text aliases = 6;
  // List of localized descriptions of the entity
  repeated Text descriptions = 7;
  // Cover Image id of the entity
  string cover_image_id = 8;
  // Banner Image id of the entity
  string banner_image_id = 9;
  // List of websiste related to the entity.
  // Websites mught be official websites, Social, Wiki Entries
  repeated Website websites = 10;
}

message Person {
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  // Birthday of the person
  google.protobuf.Timestamp birthday = 4;
  /*
  Gender 
  Valid Gender values:

  Unknown gender
  UNKNOWN 
  
	Male
	MALE 

	Female
	FEMALE 
  */
  string gender = 5;
  /*
  Blod Type
  Valid blood types:

  Unknown blood type
	UNKNOWN

	A (no Rh info)
	A

	B (no Rh info)
	B

	AB (no Rh info)
	AB
  
	O (no Rh info)
	O

	A+
	A_PLUS

	B+
	B_PLUS

	AB+
	AB_PLUS
  
	O+
	O_PLUS

	A-
	A_MINUS

	B-
	B_MINUS

	AB-
	AB_MINUS
  
	O-
	O_MINUS
  */
  string blood_type = 6;
  // List of localized names of the entity
  repeated Text names = 7;
  // List of localized aliases of the entity
  repeated Text aliases = 8;
  // List of localized descriptions of the entity
  repeated Text descriptions = 9;
  // Cover Image id of the entity
  string cover_image_id = 10;
  // Banner Image id of the entity
  string banner_image_id = 11;
  // List of websiste related to the entity.
  // Websites mught be official websites, Social, Wiki Entries
  repeated Website websites = 12;
}

message Track {
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  // The release date in homeland of the content
  google.protobuf.Timestamp release_date = 2;
  // List of localized names of the entity
  repeated Text names = 3;
  // List of localized aliases of the entity
  repeated Text aliases = 4;
  // List of localized descriptions of the entity
  repeated Text descriptions = 5;
  // Cover Image id of the entity
  string cover_image_id = 6;
  // Banner Image id of the entity
  string banner_image_id = 7;
  // List of websiste related to the entity.
  // Websites mught be official websites, Social, Wiki Entries
  repeated Website websites = 8;
  // List of marketplaces related to the entry.
  // Maketplaces tells where to buy / consume / read the entity
  repeated Marketplace marketplaces = 9;
  // List of people/organizations which contributed to the production/distribution of the content
  repeated Collaboration staff = 10;
  // List of genres the entity is part of
  repeated Edge genres = 11;
  // Releases are all those entities which practically make the content consumable
  // Some examples are: Volumes for GraphicNovels/LightNovels/Chapters, BlueRays for Anime, Collector Editions... 
  repeated Edge releases = 12;
}

message Universe {
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  // List of localized names of the entity
  repeated Text names = 2;
  // List of localized aliases of the entity
  repeated Text aliases = 3;
  // List of localized descriptions of the entity
  repeated Text descriptions = 4;
  // Cover Image id of the entity
  string cover_image_id = 5;
  // Banner Image id of the entity
  string banner_image_id = 6;
  // List of websiste related to the entity.
  // Websites mught be official websites, Social, Wiki Entries
  repeated Website websites = 7;
  // List of marketplaces related to the entry.
  // Maketplaces tells where to buy / consume / read the entity
  repeated Marketplace marketplaces = 8;
  // List of contents part of the universe
  // Universes can include Anime, GraphicNovels, LightNovels and VisualNovels
  repeated Edge contents = 9;
  // List of canonicals part of the universe
  repeated Edge canonicals = 10;
}

message VisualNovel {
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  /*
  Valid Visual Novel lengths:
  Unknown length
  UNKNOWN
  
  < 2 hours
  VERY_SHORT

  20 - 10 hours
  SHORT

  10 - 30 hours
  MEDIUM

  30 - 50 hours
  LONG

  > 50 hours
  VERY_LONG
  */
  string length = 2;
  // List of localized names of the entity
  repeated Text names = 3;
  // List of localized aliases of the entity
  repeated Text aliases = 4;
  // List of localized descriptions of the entity
  repeated Text descriptions = 5;
  // Cover Image id of the entity
  string cover_image_id = 6;
  // Banner Image id of the entity
  string banner_image_id = 7;
  // List of websiste related to the entity.
  // Websites mught be official websites, Social, Wiki Entries
  repeated Website websites = 8;
  // List of marketplaces related to the entry.
  // Maketplaces tells where to buy / consume / read the entity
  repeated Marketplace marketplaces = 9;
  /*
  Status of the content
  Valid content statuses:

  Unknown status
  UNKNOWN

  Publishing or airing is still ongoing.
  ONGOING

  Publishing or airing has been completed.
  COMPLETED

  Publishing or airing has been scheduled.
  SCHEDULED

  Publishing or airing started but never finished.
  INTERRUPTED

  Publishing or airing was scheduled but later canceled.
  CANCELED

  Publishing or airing has been suspended / has been put on hold.
  SUSPENDED

  The content is in work in progress
  WORK_IN_PROGRESS
  */
  string status = 10;
  //List of relations with other content
  repeated ContentRelation content_relations = 11;
  /*
  Publishin Type specifies wether the content has been produced by a self published creator or if it's backed by a corporation
  Valid Publishing types:

  Unknown status
	UNKNOWN
  
	Self publishing
	SELF

	Published by a corporation
	CORPORATE
  */
  string publishing_type = 12;
  /*
  Original specifies if the idea behind the content is original or if it's base on an existing opera.
  Parodies of other content are normally not original, because charactes/settings/storyline are not owned by the creator.

  Valid values:
  TRUE
  FALSE
  UNKNOWN
  */
  string original = 13;
  // List of localized airing/publishing periods of the content
  repeated Running runnings = 14;
  // The release date in homeland of the content
  google.protobuf.Timestamp release_date = 15;
  // List of characters starred in the content
  repeated Cast starring = 16;
  // List of people/organizations which contributed to the production/distribution of the content
  repeated Collaboration staff = 17;
  // List of genres the entity is part of
  repeated Edge genres = 18;
  // Releases are all those entities which practically make the content consumable
  // Some examples are: Volumes for GraphicNovels/LightNovels/Chapters, BlueRays for Anime, Collector Editions... 
  repeated Edge releases = 19;
  // List of soundtracks in the content
  repeated Soundtrack soundtracks = 20;
  // List of voice actors giving voice to the characters in the content
  repeated VoiceActing voiceactings = 21;
  /*
  Maturity ratings describes what it the minum age to legally consume a content  
  Valid maturity Ratings:

  Over 18 in USA
  MTR_RTN_USA_NC17

  Over 18 in USA
  MTR_RTN_USA_R

  Over 13 in USA
  MTR_RTN_USA_PG13

  Over 3 in USA
  MTR_RTN_USA_PG

  Safe in USA
  MTR_RTN_USA_G
  */
  repeated string maturity_ratings = 22;
  /*
  Region restrictions mark the content as illegal in some region given the local regulations
  Valid Region Restrictions:

  No Region Restriction
  NONE

  The Entity is illegal following the U.N. guidelines
  ILLEGAL
  */
  repeated string region_restrictions = 23;
}

message Volume {
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  repeated string languages = 2;
  // The release date in homeland of the content
  google.protobuf.Timestamp release_date = 3;
  /*
  Valid Censorships
	Unknown censorship
	UNKNOWN

	No censorship
	NONE

	Censorship applied
	CENSORED
  */
  string  censorship = 5;
  /*
  Publishin Type specifies wether the content has been produced by a self published creator or if it's backed by a corporation
  Valid Publishing types:

  Unknown status
	UNKNOWN
  
	Self publishing
	SELF

	Published by a corporation
	CORPORATE
  */
  string publishing_type = 6; 
  // Amazon identifier of the good
  string asin = 7;
  // Global Trade identifier of the good
  string gtin = 8;
  // Incremental index of the volume.
  // Describes the release order  
  int32 index = 9;
  // List of localized names of the entity
  repeated Text names = 11;
  // List of localized aliases of the entity
  repeated Text aliases = 12;
  // List of localized descriptions of the entity
  repeated Text descriptions = 13;
  // Cover Image id of the entity
  string cover_image_id = 14;
  // Banner Image id of the entity
  string banner_image_id = 15;
  // List of websiste related to the entity.
  // Websites mught be official websites, Social, Wiki Entries
  repeated Website websites = 16;
  // List of marketplaces related to the entry.
  // Maketplaces tells where to buy / consume / read the entity
  repeated Marketplace marketplaces = 17;
  // List of characters starred in the content
  repeated Cast starring = 18;
  // List of people/organizations which contributed to the production/distribution of the content
  repeated Collaboration staff = 19;
  /*
  Maturity ratings describes what it the minum age to legally consume a content  
  Valid maturity Ratings:

  Over 18 in USA
  MTR_RTN_USA_NC17

  Over 18 in USA
  MTR_RTN_USA_R

  Over 13 in USA
  MTR_RTN_USA_PG13

  Over 3 in USA
  MTR_RTN_USA_PG

  Safe in USA
  MTR_RTN_USA_G
  */
  repeated string maturity_ratings = 20;
  /*
  Region restrictions mark the content as illegal in some region given the local regulations
  Valid Region Restrictions:

  No Region Restriction
  NONE

  The Entity is illegal following the U.N. guidelines
  ILLEGAL
  */
  repeated string region_restrictions = 21;
}

// Localized text following the ISO3 standard
message Text {
  // Text
  string text = 1;
  // Valid ISO3 localization which identifies the language/full localization of the text
  string localization = 2;
}

// Period in which the content has been aired/released/published for a particular localization
message Running {
  // Start of the publishing/airing/release  
  google.protobuf.Timestamp start_time = 1 [(google.api.field_behavior) = REQUIRED];
  // End of the publishing/airing/release  
  // Omitted if the content is still ONGOING
  google.protobuf.Timestamp end_time = 2;
  // Valid ISO3 localization
  string localization = 3 [(google.api.field_behavior) = REQUIRED];
}

// Relation with another entity
message Edge {
  // Entity resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

/*
ContentRelation represent the relation between 2 different content.
The ContentReleation field is common to both the content, therefore the server do not need
to have both relations (from content A to B, and from B to A) because it will generate automatically
the reverse relation.

> Sending A sequel of B, the server will generate B prequel A

The relation has to be read as
entity -> has <relation> -> which is <related>
EG: Naruto -> Sequel -> Naruto Shippuden = <Naruto> has <sequel>, which is <Naruto Shippuden>
*/
message ContentRelation {
  // Object of the relation
  Edge related = 1 [(google.api.field_behavior) = REQUIRED];

  /*
  Relation
  Valid relations:

  ADAPTATION implies that the subject is the base from which the object has been adapted
  ADAPTATION

  BASE Adaptation
  BASE

  SAMESETTING Same universe/world/reality/timeline with completely different characters.
  SAME_SETTING

  ALTSETTING Same universe/world/reality/timeline same characters with different universe/world/reality/timeline.
  ALTERNATIVE_SETTING

  ALTVERSION alternative version Same setting, same characters, story is told differently.
  ALTERNATIVE_VERSION

  CHARACTER When characters appear in both series, but is not a spin-off
  CHARACTER

  FULLSTORY the object is full story of the subject
  this implies that the subject is a summary of the object
  FULL_STORY

  SUMMARY summary
  SUMMARY

  PARENTSTORY the object is the parent story of the subject
  this implies that the subject is a spin-off of the object
  PARENT_STORY

  SpinOff spin off
  SPIN_OFF

  PREQUEL prequel
  PREQUEL

  SEQUEL sequel
  SEQUEL

  MAINSTORY the object is the main story from which the subject has been created
  this implies that the subject is a side story of the object
  MAIN_STORY

  SIDESTORY side story
  SIDE_STORY

  ORIGINAL the object is the original of the subject
  this implies that the subject is the parody or fan made object
  ORIGINAL

  PARODY is parody
  PARODY
  */
  string relation = 2 [(google.api.field_behavior) = REQUIRED];
}

/*
Cast represnt the relation between a character and a content.
The cast is always field of the content and the Edge points to the character.
*/
message Cast {
  // Casted Chracter
  Edge character = 1 [(google.api.field_behavior) = REQUIRED];

  /*
  Relation within the content
  Valid relations:

  MAIN
  SUPPORT
  APPEARS
  */
  string relation = 2 [(google.api.field_behavior) = REQUIRED];
}

/*
Collaboration represent the relation between a content and a person or organization.
The collaboration must be localizaed and it must carry the information about the role of the collaborator.
The Collaboration is always field of the content and the Edge points to the collaborator.
The localization must be a valid ISO3 localization which identifies the language/full localization of the content's version 
for which the collaborator collaborated
*/
message Collaboration {
  // Person / organization taking part to the collaboration
  Edge collaborator = 1 [(google.api.field_behavior) = REQUIRED];
  // Valid ISO3 localization in which the collaborator took part in
  string localization = 2 [(google.api.field_behavior) = REQUIRED];
  // What role the collaborator had
  string role = 3 [(google.api.field_behavior) = REQUIRED];
}

/*
Voice Acting represent voice given by a person to a voiced entity in a specific content
The Voice Acting is always field of the content and it must be localized.
The localization must be a valid ISO3 localization which identifies the language/full localization of the content's version 
for which the actor gave the voice to the entity
*/
message VoiceActing {
  // The entity receiving the voice
  // Character or VoiceOver
  Edge voiced = 1 [(google.api.field_behavior) = REQUIRED];
  // Who gave the voice
  Edge actor = 2 [(google.api.field_behavior) = REQUIRED];
  // Valid ISO3 localization for which the voice was given
  string localization = 3 [(google.api.field_behavior) = REQUIRED];
  
  /*
  Voices can be primary or not.
  Primary voices are those lasting for the majority of the conte
  While Secondary voices are normally used in flashbacks or side events

  Valid values:
  TRUE
  FALSE
  UNKNOWN
  */
  string primary = 4 [(google.api.field_behavior) = REQUIRED];
}

/*
Any kind of website related to the entity.
Could be official website, twitter, or external resources such as wikipedia
*/
message Website {
  // Website url
  string url = 1 [(google.api.field_behavior) = REQUIRED];
}

/*
Marketplace is where to consume the content.
The name field must point to a valid valid marketplace id in order to load icon and name of the marketplace.
If the marketplace is limited to some specific country, add them to the field region following the IOS3 standard
*/
message Marketplace {
  // Required resource name
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  // Marketplace url
  string url = 2 [(google.api.field_behavior) = REQUIRED];
  // region in which the marketplace distributes
  string region = 3;
}

/*
Soundtrack exposes the information about which Track has been used in which Content in which localization and for what.
The localization must be a valid ISO3 localization which identifies the language/full localization of the content's version 
for which the Track is used
*/
message Soundtrack {
  // Track used as soundtrack
  Edge track = 1 [(google.api.field_behavior) = REQUIRED];

  /*
  Type describes for what purpose the track was used
  Valid Soundtrack types:

  Unknown type
  UNKNOWN

  The track is used as ending
  ENDING

  The track is used as opening
  OPENING

  The track is used as insert song
  INSERT

  The track is used as background song
  BACKGROUND

  The track is used as image song
  IMAGE

  The track is used as theme song
  THEME
  */
  string type = 2 [(google.api.field_behavior) = REQUIRED];

  /*
  version describes which version of the track was used
  Valid track versions:

  Unknown version
  UNKNOWN

  Normal version of the track
  NORMAL

  Instrumental version
  INSTRUMENTAL

  Only piano version
  PIANO

  Japanese version
  JAPANESE

  English version
  ENGLISH

  TV version of the track
  TV

  The track has been mixed with another
  MIX

  The track has been remixed
  REMIX

  Extended version of the track
  EXTENDED

  other
  OTHER
  */
  string version = 3 [(google.api.field_behavior) = REQUIRED];
  // Valid ISO3 localization in which the track was used
  string localization = 4 [(google.api.field_behavior) = REQUIRED];
}

/*
TrackListing exposes the information about which Track has been released from which MusicRelease in which version and in whic order.
*/
message TrackListing {
  // Collection of tracks groupping one or multiple tracks in order to them be sold
  Edge musicRelease = 1 [(google.api.field_behavior) = REQUIRED];

  /*
  Valid track versions:
  Unknown version
  UNKNOWN

  Normal version of the track
  NORMAL

  Instrumental version
  INSTRUMENTAL

  Only piano version
  PIANO

  Japanese version
  JAPANESE

  English version
  ENGLISH

  TV version of the track
  TV

  The track has been mixed with another
  MIX

  The track has been remixed
  REMIX

  Extended version of the track
  EXTENDED
  
  other
  OTHER
  */
  string version = 2 [(google.api.field_behavior) = REQUIRED];
  // Incremental index of the track.
  // Describes the play order in the release
  int32 index = 3 [(google.api.field_behavior) = REQUIRED];
}
